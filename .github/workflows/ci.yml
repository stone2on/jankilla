name: Build

on:
  push:
    branches: [ main ]
      
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    permissions: write-all
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: List directory contents
      run: |
        $items = Get-ChildItem -Path . -Recurse
        $items | ForEach-Object {
          if ($_.PSIsContainer) {
            Write-Output ("[DIR] " + $_.FullName)
          } else {
            Write-Output ("[FILE] " + $_.FullName)
          }
        }

    - name: Install NuGet
      run: choco install nuget.commandline

    - name: Restore NuGet packages
      run: nuget restore src/Jankilla/Jankilla.sln
 
    - name: Build the solution
      run: |
        & 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\MSBuild.exe' src/Jankilla/Jankilla.sln /p:Configuration=Release

    - name: Print current directory
      run: pwd

    - name: List directory contents
      run: |
        $items = Get-ChildItem -Path . -Recurse
        $items | ForEach-Object {
          if ($_.PSIsContainer) {
            Write-Output ("[DIR] " + $_.FullName)
          } else {
            Write-Output ("[FILE] " + $_.FullName)
          }
        }
 
    # - name: Pack NuGet package - Core
      # run: nuget pack src/Jankilla/Jankilla.Core/Jankilla.Core.csproj -Properties Configuration=Release

    # - name: Publish NuGet package - Core
    #   run: nuget push "*.nupkg" -Source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json -ApiKey ${{ secrets.GITHUB_TOKEN }}

    - name: Find and push NuGet packages
      run: |
          # 재귀적으로 모든 .nupkg 파일 찾기
          $packages = Get-ChildItem -Path . -Recurse -Filter *.nupkg

          # 각 nupkg 파일을 NuGet 저장소에 push
          foreach ($package in $packages) {
            Write-Host "Pushing package: $($package.FullName)"
            nuget push $package.FullName -Source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json -ApiKey ${{ secrets.GITHUB_TOKEN }} -SkipDuplicate
          }
      shell: pwsh  # PowerShell 사용 설정
      working-directory: ${{ github.workspace }}  # 작업 디렉토리 설정

    # - name: Pack NuGet package - Driver - MxComponent
      # run: nuget pack src/Jankilla/Jankilla.Driver.MitsubishiMxComponent/Jankilla.Driver.MitsubishiMxComponent.csproj -Properties Configuration=Release

    # - name: Publish NuGet package - Driver - MxComponent
    #   run: nuget push "*.nupkg" -Source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json -ApiKey ${{ secrets.GITHUB_TOKEN }}
 
    # - name: Publish artifacts
      # uses: actions/upload-artifact@v4
      # with:
        # name: build-artifacts-${{ github.ref_name }}
        # path: build/release/

    # 폴더 만드는 스탭
    # - name: make artifacts dir
      # run: mkdir ./artifacts/

    # 소스 파일 압축
    # - name: zip artifacts
      # run: Compress-Archive build/release/* ./artifacts/build-artifacts-${{ github.ref_name }}.zip
      
    - name: List directory contents
      run: |
        $items = Get-ChildItem -Path . -Recurse
        $items | ForEach-Object {
          if ($_.PSIsContainer) {
            Write-Output ("[DIR] " + $_.FullName)
          } else {
            Write-Output ("[FILE] " + $_.FullName)
          }
        }
 
        
  
    
    